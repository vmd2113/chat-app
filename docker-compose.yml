version: "3.8"

services:
    postgres:
        image: postgres:15
        container_name: chatapp-postgres
        environment:
            POSTGRES_DB: chatapp_db
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./database-init:/docker-entrypoint-initdb.d
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis:7
        container_name: chatapp-redis
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data
        command: redis-server --appendonly yes
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5

    minio:
        image: minio/minio:RELEASE.2023-03-20T20-16-18Z
        container_name: chatapp-minio
        environment:
            MINIO_ROOT_USER: minioadmin
            MINIO_ROOT_PASSWORD: minioadmin
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - minio-data:/data
        command: server /data --console-address ":9001"
        healthcheck:
            test:
                ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

    backend:
        build: ./chat-app-be
        container_name: chatapp-backend
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
            minio:
                condition: service_healthy
        environment:
            SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/chatapp_db
            SPRING_DATASOURCE_USERNAME: postgres
            SPRING_DATASOURCE_PASSWORD: postgres
            SPRING_REDIS_HOST: redis
            SPRING_REDIS_PORT: 6379
            MINIO_ENDPOINT: http://minio:9000
            MINIO_ACCESS_KEY: minioadmin
            MINIO_SECRET_KEY: minioadmin
        ports:
            - "8080:8080"

    frontend:
        build: ./chat-app-fe
        container_name: chatapp-frontend
        depends_on:
            - backend
        ports:
            - "5173:5173"

volumes:
    postgres-data:
    redis-data:
    minio-data:
